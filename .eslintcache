[{"D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\index.js":"1","D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\helpers\\Questions.js":"2","D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\components\\Menu.js":"3","D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\components\\Quiz.js":"4","D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\reportWebVitals.js":"5","D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\App.js":"6","D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\components\\EndScreen.js":"7","D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\helpers\\geographie.js":"8","D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\helpers\\Contexts.js":"9","D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\helpers\\Animaux.js":"10","D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\helpers\\cultureG.js":"11","D:\\repo\\Quizz\\quizz\\src\\index.js":"12","D:\\repo\\Quizz\\quizz\\src\\helpers\\cultureG.js":"13","D:\\repo\\Quizz\\quizz\\src\\components\\Quiz.js":"14","D:\\repo\\Quizz\\quizz\\src\\App.js":"15"},{"size":478,"mtime":1611932715000,"results":"16","hashOfConfig":"17"},{"size":580,"mtime":1666042624130,"results":"18","hashOfConfig":"17"},{"size":745,"mtime":1666361874454,"results":"19","hashOfConfig":"17"},{"size":4399,"mtime":1666360684699,"results":"20","hashOfConfig":"17"},{"size":362,"mtime":1611932715000,"results":"21","hashOfConfig":"17"},{"size":899,"mtime":1666082176220,"results":"22","hashOfConfig":"17"},{"size":587,"mtime":1666361863246,"results":"23","hashOfConfig":"17"},{"size":16801,"mtime":1666202448380,"results":"24","hashOfConfig":"17"},{"size":91,"mtime":1611932715000,"results":"25","hashOfConfig":"17"},{"size":45019,"mtime":1666354943437,"results":"26","hashOfConfig":"17"},{"size":221301,"mtime":1666354931225,"results":"27","hashOfConfig":"17"},{"size":478,"mtime":1611932715000,"results":"28","hashOfConfig":"29"},{"size":221301,"mtime":1666354931225,"results":"30","hashOfConfig":"29"},{"size":4525,"mtime":1666372987658,"results":"31","hashOfConfig":"29"},{"size":900,"mtime":1666372751755,"results":"32","hashOfConfig":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1y2yh9k",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fcp839",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\index.js",[],["66","67"],"D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\helpers\\Questions.js",[],"D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\components\\Menu.js",["68"],"D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\components\\Quiz.js",["69","70","71","72","73","74","75","76","77","78","79","80"],"import \"../App.css\";\nimport { CultureG as Questions } from \"../helpers/cultureG\";\n//import { Geographie } from \"../helpers/Animaux\";\n//import { Geographie } from \"../helpers/geographie\";\nimport { useState } from \"react\";\n\nimport { useContext } from \"react\";\nimport { GameStateContext } from \"../helpers/Contexts\";\n\nfunction Quiz() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [optionChosen, setOptionChosen] = useState(\"\");\n  const [lvlDifficulty, setDifficulty] = useState(\"débutant\");\n  const [nbrPV, setPV] = useState(2);\n  const [tirageAleatoire, setTirageAleatoire] = useState(Math.floor(Math.random() * Questions[0][\"quizz\"][lvlDifficulty].length));\n  const [isSelect, setIsSelect] = useState(false);\n\n  const { score, setScore, gameState, setGameState, userName } = useContext(\n    GameStateContext\n  );\n\n  const buttons = Array.from(\n    document.getElementsByClassName('Answer')\n  );\n\n  const chooseOption = (option) => {\n    setOptionChosen(option);\n  };\n\n  const setSelectedButton = (btn) => {\n    buttons.map((button) => button.style.backgroundColor = \"\");\n    btn.target.style.backgroundColor = \"red\";\n  }\n\n  const resetSelectedButton = () => {\n    buttons.map((button) => button.style.backgroundColor = \"\");\n  }\n\n  const nextQuestion = () => {\n    \n    // Si la réponse est bonne\n    if (Questions[0][\"quizz\"][lvlDifficulty][tirageAleatoire][\"réponse\"] == optionChosen) {\n      setScore(score + 1);\n      Questions[0][\"quizz\"][lvlDifficulty].splice(tirageAleatoire, 1);\n      \n      \n      if( (score == 20 ) && (lvlDifficulty == \"débutant\") ) {\n        setDifficulty(\"confirmé\");\n      } else if ( (score == 40) && (lvlDifficulty == \"confirmé\") ) {\n        setDifficulty(\"expert\");\n      }\n      resetSelectedButton();\n      setTirageAleatoire(Math.floor(Math.random() * Questions[0][\"quizz\"][lvlDifficulty].length));\n    } else {\n      setPV(nbrPV - 1);\n      if(nbrPV < 1) {\n        setGameState(\"finished\"); \n        return\n      } \n      resetSelectedButton();\n    }\n    console.log(score);\n    console.log(lvlDifficulty);\n  };\n\n  const finishQuiz = () => {\n    if (Questions[0][\"quizz\"][lvlDifficulty][tirageAleatoire][\"réponse\"] == optionChosen) {\n      setScore(score + 1);\n    }\n    setGameState(\"finished\");\n  };\n\n  return (\n    <div className=\"Quiz\">\n      <div className=\"InfoQuizz\">\n        <span>{nbrPV + 1 } {nbrPV < 2 ? \"vie\" : \"vies\" } {userName}</span>\n        <h2>Question n°{score + 1}</h2>\n        <span>Score : {score}</span>\n        {console.log(\"Test bug\")}\n      </div>\n      \n      <div className=\"Questions\">\n      <h1>{Questions[0][\"quizz\"][lvlDifficulty][tirageAleatoire][\"question\"]}</h1>\n        <button className=\"Answer\" id=\"0\"\n          onClick={(event) => {\n            setSelectedButton(event);\n            chooseOption(Questions[0][\"quizz\"][lvlDifficulty][tirageAleatoire][\"propositions\"][0]);\n          }}\n        >\n          {Questions[0][\"quizz\"][lvlDifficulty][tirageAleatoire][\"propositions\"][0]}\n        </button>\n        <button className=\"Answer\" id=\"1\"\n          onClick={(event) => {\n            setSelectedButton(event);\n            chooseOption(Questions[0][\"quizz\"][lvlDifficulty][tirageAleatoire][\"propositions\"][1]);\n          }}\n        >\n          {Questions[0][\"quizz\"][lvlDifficulty][tirageAleatoire][\"propositions\"][1]}\n        </button>\n        <button className=\"Answer\" id=\"2\"\n          onClick={(event) => {\n            setSelectedButton(event);\n            chooseOption(Questions[0][\"quizz\"][lvlDifficulty][tirageAleatoire][\"propositions\"][2]);\n          }}\n        >\n          {Questions[0][\"quizz\"][lvlDifficulty][tirageAleatoire][\"propositions\"][2]}\n        </button>\n        <button className=\"Answer\" id=\"3\"\n          onClick={(event) => {\n            setSelectedButton(event);\n            chooseOption(Questions[0][\"quizz\"][lvlDifficulty][tirageAleatoire][\"propositions\"][3]);\n          }}\n        >\n          {Questions[0][\"quizz\"][lvlDifficulty][tirageAleatoire][\"propositions\"][3]}\n        </button>\n      </div>\n      {console.log(lvlDifficulty)}\n      {(lvlDifficulty === \"expert\") && (score == 100) ? (\n        <button onClick={finishQuiz} id=\"nextQuestion\">\n          Dernière question Quiz\n        </button>\n      ) : (\n        <button id=\"nextQuestion\" onClick={nextQuestion}>\n          Prochaine Question\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default Quiz;\n","D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\reportWebVitals.js",[],"D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\App.js",[],["81","82"],"D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\components\\EndScreen.js",[],"D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\helpers\\geographie.js",[],"D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\helpers\\Contexts.js",[],"D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\helpers\\Animaux.js",[],"D:\\Documents\\Taurine\\quizz\\QuizApp-main\\src\\helpers\\cultureG.js",[],"D:\\repo\\Quizz\\quizz\\src\\index.js",[],"D:\\repo\\Quizz\\quizz\\src\\helpers\\cultureG.js",[],"D:\\repo\\Quizz\\quizz\\src\\components\\Quiz.js",["83","84","85"],"D:\\repo\\Quizz\\quizz\\src\\App.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":6,"column":11,"nodeType":"92","messageId":"93","endLine":6,"endColumn":20},{"ruleId":"90","severity":1,"message":"94","line":11,"column":10,"nodeType":"92","messageId":"93","endLine":11,"endColumn":25},{"ruleId":"90","severity":1,"message":"95","line":11,"column":27,"nodeType":"92","messageId":"93","endLine":11,"endColumn":45},{"ruleId":"90","severity":1,"message":"96","line":16,"column":10,"nodeType":"92","messageId":"93","endLine":16,"endColumn":18},{"ruleId":"90","severity":1,"message":"97","line":16,"column":20,"nodeType":"92","messageId":"93","endLine":16,"endColumn":31},{"ruleId":"90","severity":1,"message":"91","line":18,"column":28,"nodeType":"92","messageId":"93","endLine":18,"endColumn":37},{"ruleId":"98","severity":1,"message":"99","line":42,"column":74,"nodeType":"100","messageId":"101","endLine":42,"endColumn":76},{"ruleId":"98","severity":1,"message":"99","line":47,"column":18,"nodeType":"100","messageId":"101","endLine":47,"endColumn":20},{"ruleId":"98","severity":1,"message":"99","line":47,"column":44,"nodeType":"100","messageId":"101","endLine":47,"endColumn":46},{"ruleId":"98","severity":1,"message":"99","line":49,"column":26,"nodeType":"100","messageId":"101","endLine":49,"endColumn":28},{"ruleId":"98","severity":1,"message":"99","line":49,"column":51,"nodeType":"100","messageId":"101","endLine":49,"endColumn":53},{"ruleId":"98","severity":1,"message":"99","line":67,"column":74,"nodeType":"100","messageId":"101","endLine":67,"endColumn":76},{"ruleId":"98","severity":1,"message":"99","line":118,"column":47,"nodeType":"100","messageId":"101","endLine":118,"endColumn":49},{"ruleId":"86","replacedBy":"102"},{"ruleId":"88","replacedBy":"103"},{"ruleId":"90","severity":1,"message":"96","line":15,"column":10,"nodeType":"92","messageId":"93","endLine":15,"endColumn":18},{"ruleId":"90","severity":1,"message":"97","line":15,"column":20,"nodeType":"92","messageId":"93","endLine":15,"endColumn":31},{"ruleId":"90","severity":1,"message":"91","line":19,"column":28,"nodeType":"92","messageId":"93","endLine":19,"endColumn":37},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'gameState' is assigned a value but never used.","Identifier","unusedVar","'currentQuestion' is assigned a value but never used.","'setCurrentQuestion' is assigned a value but never used.","'isSelect' is assigned a value but never used.","'setIsSelect' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["104"],["105"],"no-global-assign","no-unsafe-negation"]